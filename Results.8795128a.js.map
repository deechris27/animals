{"version":3,"sources":["../Pet.js","../Results.js"],"names":["Pet","props","name","animal","breed","media","location","id","photos","photo","filter","hero","value","doggy","key","secret","Results","pets","setPets","loading","setLoading","search","pet","find","searchParams","output","then","data","dataPets","petfinder","Array","isArray","map","breeds","join","contact","city","state","ResultsContext","context"],"mappings":"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","file":"Results.8795128a.js","sourceRoot":"..\\src\\public","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Pet(props) {\r\n\r\n    const {name, animal, breed, media, location, id} = props;\r\n    \r\n    let photos = [];\r\n\r\n    if(media && media.photos && media.photos.photo){\r\n        photos = media.photos.photo.filter(photo => photo[\"@size\"] === \"pn\");\r\n    }\r\n\r\n    let hero = \"http://placecorgi.com/300/300\";\r\n\r\n    if(photos[0] && photos[0].value){\r\n        hero = photos[0].value\r\n    }\r\n\r\n    return (\r\n      <Link to={`/details/${id}`} className=\"pet\">\r\n         <div className=\"image-container\">\r\n             <img src={hero} alt={name} />\r\n         </div>\r\n         <div className=\"info\">\r\n            <h1>{name}</h1>\r\n            <h2>{`${animal} -- ${breed} -- ${location}`}</h2>\r\n         </div>\r\n      </Link>\r\n    )\r\n}\r\n\r\nexport default Pet;\r\n","import React, {useState, useEffect} from 'react';\r\nimport pf from 'petfinder-client';\r\nimport {Consumer} from './SearchContext';\r\nimport Pet from './Pet';\r\nimport Loader from './components/Spinner';\r\n\r\nconst doggy = pf({\r\n    key: process.env.API_KEY,\r\n    secret: process.env.API_SECRET\r\n});\r\n\r\nfunction Results(props) {\r\n\r\n    const [pets, setPets] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(()=>{\r\n       search();\r\n    },[]);\r\n\r\n    function search(){\r\n        doggy.pet.find({\r\n            location: props.searchParams.location,\r\n            animal: props.searchParams.animal,\r\n            breed: props.searchParams.breed,\r\n            output: \"full\"\r\n         })\r\n         .then(data=>{\r\n             let pets;\r\n             let dataPets = data.petfinder.pets;\r\n             if(dataPets && dataPets.pet){\r\n                 pets = Array.isArray(dataPets.pet) ? dataPets.pet : [dataPets.pet];\r\n             }else{\r\n                 pets = [];\r\n             }\r\n\r\n             setPets(pets);\r\n             setLoading(false);\r\n         })\r\n    }\r\n\r\n    if(loading){\r\n        return <Loader loading={loading}/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            {pets.map(pet=>{\r\n                let breed;\r\n                breed = Array.isArray(pet.breeds.breed) ? pet.breeds.breed.join(\", \") : pet.breeds.breed;\r\n                return(\r\n                   <Pet \r\n                    animal={pet.animal}\r\n                    key={pet.id}\r\n                    name={pet.name}\r\n                    breed={breed}\r\n                    media={pet.media}\r\n                    location={`${pet.contact.city}, ${pet.contact.state}`}\r\n                    id={pet.id}\r\n                   />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function ResultsContext(props){\r\n    return (\r\n        <Consumer>\r\n            {context => <Results {...props} searchParams={context} />}\r\n        </Consumer>\r\n    )\r\n}\r\n"]}